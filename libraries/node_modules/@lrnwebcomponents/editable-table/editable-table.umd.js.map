{"version":3,"file":"editable-table.umd.js","sources":["lib/editable-table-behaviors.js","lib/editable-table-editor-rowcol.js","lib/editable-table-iconset.js","lib/editable-table-editor-toggle.js","lib/editable-table-editor-cell.js","lib/editable-table-styles.js","lib/editable-table-sort.js","lib/editable-table-filter.js","lib/editable-table-display.js","editable-table.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n/**\n * `editable-table-behaviors`\n * `A set of common behaviors for editable-table web components.`\n *\n * @polymer\n * @mixinFunction\n */\n\n/**\n * behaviors needed to display the table in either mode\n */\nexport const displayBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    static get properties() {\n      let props = {\n        /**\n         * Add borders to table and table cells.\n         */\n        bordered: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * a table caption\n         */\n        caption: {\n          type: String,\n          value: null,\n          notify: true\n        },\n        /**\n         * Display the first row as a column header.\n         */\n        columnHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Raw data pulled in from the csv file.\n         */\n        csvData: {\n          type: String,\n          value: \"\"\n        },\n        /**\n         * Condense height of table cells.\n         */\n        condensed: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * raw data\n         */\n        data: {\n          type: Array,\n          value: [],\n          notify: true,\n          observer: \"_dataChanged\"\n        },\n        /**\n         * Location of the CSV file.\n         */\n        dataCsv: {\n          type: String\n        },\n        /**\n         * Enable filtering by cell value.\n         */\n        filter: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Display the last row as a column footer.\n         */\n        footer: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Display the first column as a row header.\n         */\n        rowHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * When table is wider than screens,\n         * users will select a column to display\n         * instead of scrolling across the table.\n         */\n        responsive: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Enable sorting by column header.\n         */\n        sort: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Add alternating row striping.\n         */\n        striped: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Columns in <thead>\n         */\n        thead: {\n          type: Array,\n          computed: \"_getThead(data,columnHeader)\"\n        },\n        /**\n         * Rows in <tbody>\n         */\n        tbody: {\n          type: Array,\n          computed: \"_getTbody(data,columnHeader,footer)\"\n        },\n        /**\n         * Rows in <tfoot>\n         */\n        tfoot: {\n          type: Array,\n          computed: \"_getTfoot(data,footer)\"\n        }\n      };\n      if (super.properties) {\n        props = Object.assign(props, super.properties);\n      }\n      return props;\n    }\n\n    constructor() {\n      super();\n      import(\"@polymer/iron-ajax/iron-ajax.js\");\n    }\n\n    ready() {\n      super.ready();\n      /*\n        only import slotted HTML if there is no taable data\n      */\n      if (\n        (this.data.length < 1 || this.data[0].length < 1) &&\n        this.querySelector(\"table\") !== null\n      )\n        this.importHTML(this.querySelector(\"table\"));\n    }\n\n    /**\n     * converts csv string to array\n     * @param {string} text the CSV string\n     * @returns {array} a multidimensional table array\n     * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n     */\n    CSVtoArray(text) {\n      let p = \"\",\n        row = [\"\"],\n        ret = [row],\n        i = 0,\n        r = 0,\n        s = !0,\n        l;\n      for (l in text) {\n        l = text[l];\n        if ('\"' === l) {\n          if (s && l === p) row[i] += l;\n          s = !s;\n        } else if (\",\" === l && s) l = row[++i] = \"\";\n        else if (\"\\n\" === l && s) {\n          if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n          row = ret[++r] = [(l = \"\")];\n          i = 0;\n        } else row[i] += l;\n        p = l;\n      }\n      return ret;\n    }\n    /**\n     * Return table data as plain CSV\n     * @returns {string} for the CSV\n     */\n    getTableCSV() {\n      return this.data\n        .map(row => {\n          return row\n            .map(cell => {\n              cell = this._replaceBlankCell(cell);\n              return this._isNumeric(cell)\n                ? cell.replace(/,/g, \"\")\n                : `\\\"${cell}\\\"`;\n            })\n            .join(\",\");\n        })\n        .join(\"\\n\");\n    }\n    /**\n     * Return table as plain HTML\n     * @returns {string} the HTML for the table\n     */\n    getTableHTML() {\n      let getTR = (tr, open = \"td\", close = \"td\") => {\n          let th = this.rowHeader ? tr.slice(0, 1) : [],\n            td = this.rowHeader ? tr.slice(1) : tr;\n          return `\\n\\t\\t<tr>${th\n            .map(cell => {\n              return `\\n\\t\\t\\t<th scope=\"row\">${this._replaceBlankCell(\n                cell\n              )}</th>`;\n            })\n            .join(\"\")}${td\n            .map(cell => {\n              return `\\n\\t\\t\\t<${open}>${this._replaceBlankCell(\n                cell\n              )}</${close}>`;\n            })\n            .join(\"\")}\\n\\t\\t</tr>`;\n        },\n        headers = this.thead.map(tr => {\n          return getTR(tr, `th scope=\"col\"`, `th`);\n        }),\n        body = this.tbody.map(tr => {\n          return getTR(tr);\n        }),\n        footer = this.tfoot.map(tr => {\n          return getTR(tr);\n        });\n      return [\n        \"<table>\",\n        this.caption !== \"\"\n          ? `\\n\\t<caption>\\n\\t\\t${this.caption}\\n\\t</caption>`\n          : \"\",\n        headers.length > 0 ? `\\n\\t<thead>${headers.join(\"\")}\\n\\t</thead>` : \"\",\n        body.length > 0 ? `\\n\\t<tbody>${body.join(\"\")}\\n\\t</tbody>` : \"\",\n        footer.length > 0 ? `\\n\\t<tfoot>${footer.join(\"\")}\\n\\t</tfoot>` : \"\",\n        \"\\n</table>\"\n      ].join(\"\");\n    }\n    /**\n     * Return table data and configuration\n     * @returns {object} an object with all the table data and configurations\n     */\n    getTableProperties() {\n      let data = {\n        bordered: !this.hideBordered ? this.bordered : null,\n        caption: this.caption,\n        columnHeader: this.columnHeader,\n        condensed: !this.hideCondensed ? this.condensed : null,\n        data: this.data,\n        filter: !this.hideFilter ? this.filter : null,\n        footer: this.footer,\n        rowHeader: this.rowHeader,\n        responsive: !this.hideResponsive ? this.responsive : null,\n        sort: !this.hideSort ? this.sort : null,\n        striped: !this.hideStriped ? this.striped : null,\n        summary: this.summary\n      };\n      return data;\n    }\n    /**\n     * imports table HTML as data\n     * @param {HTMLElement} table the table element\n     */\n    importHTML(table) {\n      let data = [].slice.call(table.querySelectorAll(\"tr\")).map(row => {\n        return [].slice.call(row.querySelectorAll(\"th,td\")).map(cell => {\n          return typeof cell.innerHTML === \"string\"\n            ? cell.innerHTML.trim()\n            : cell.innerHTML;\n        });\n      });\n      if (data.length > 0 && data[0].length > 0) this.set(\"data\", data);\n      this.columnHeader =\n        this.columnHeader || table.querySelectorAll(\"thead\").length > 0;\n      this.rowHeader =\n        this.rowHeader || table.querySelectorAll(\"tbody th\").length > 0;\n      this.footer = this.footer || table.querySelectorAll(\"tfoot\").length > 0;\n      this.caption =\n        this.caption !== null\n          ? this.caption\n          : table.querySelectorAll(\"caption\").length > 0\n          ? table.querySelector(\"caption\").innerHTML.trim()\n          : null;\n    }\n    /**\n     * Convert from csv text to an array in the table function\n     */\n    _loadExternalData(e) {\n      let data = this.CSVtoArray(this.csvData);\n      if (data.length > 0 && data[0].length > 0) this.set(\"data\", data);\n    }\n\n    /**\n     * Gets the rows in `<tbody>`\n     * @param {array} data the table data as an array\n     * @param {boolean} columnHeader does the table have a column header\n     * @param {boolean} footer does the table have a footer\n     * @returns {array} the `<tbody>` data\n     */\n    _getTbody(data, columnHeader, footer) {\n      if (data !== undefined && data !== null && data.length > 0) {\n        let ch = columnHeader ? 1 : 0,\n          ft = footer ? data.length - 1 : data.length;\n        return data.slice(ch, ft);\n      }\n    }\n\n    /**\n     * Gets the rows in `<tbody>`\n     * @param {array} data the table data as an array\n     * @param {boolean} columnHeader does the table have a column header\n     * @param {boolean} footer does the table have a footer\n     * @returns {array} the `<tbody>` data\n     */\n    _getTfoot(data, footer) {\n      return footer ? data.slice(data.length - 1) : [];\n    }\n\n    /**\n     * Gets the columns in `<thead>`\n     * @param {array} data the table data as an array\n     * @param {boolean} columnHeader does the table have a column header\n     * @returns {array} the `<thead>`data\n     */\n    _getThead(data, columnHeader) {\n      return columnHeader ? data.slice(0, 1) : [];\n    }\n    /**\n     * replaces a blank cell with \"-\" for accessibility\n     * @param {string} cell the cell contents\n     * @returns {string} the cell contents or \"-\" if empty\n     */\n    _replaceBlankCell(cell) {\n      return String(cell).trim() === \"\" ? \"-\" : cell;\n    }\n\n    /**\n     * Sets a cell's numeric style\n     * @param {string} cell the cell contents\n     * @returns {boolean} whether cell contents are numeric\n     */\n    _isNumeric(cell) {\n      return cell !== null && !isNaN(cell.trim().replace(/\\$/g, \"\"));\n    }\n  };\n};\n\n/**\n * behaviors needed for table cells, row headers, and columns\n */\nexport const cellBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    /**\n     * Get the row or column label\n     * @param {number} index of the row or column\n     * @param  {boolean} whenther it's a row\n     * @returns {string} a row number or a column letter\n     */\n    _getLabel(index, row) {\n      if (row) {\n        return index + 1;\n      } else {\n        let numerals = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"),\n          results = this._getLetter(index)\n            .split(\"-\")\n            .reverse(),\n          label = \"\";\n        for (let i = 0; i < results.length; i++) {\n          if (results[i] !== \"\") label += numerals[results[i]];\n        }\n        return label;\n      }\n    }\n\n    /**\n     * Converts index to a letter.\n     * @param {number} index of the row or column\n     * @returns {string} a column letter\n     */\n    _getLetter(index) {\n      let place = Math.floor(index / 26),\n        multiplier = 26 * place,\n        remainder = index - multiplier,\n        letters = \"\";\n      letters += remainder + \"-\";\n      if (place > 0 && place < 26) {\n        letters += place - 1 + \"-\";\n      } else if (place >= 26) {\n        letters += this._getLetter(place - 1);\n      }\n      return letters;\n    }\n  };\n};\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n\n/**\n * `editable-table-editor-rowcol`\n * `A header label and menu for inserting and deleting a row or a column of the editable-table interface (editable-table.html).`\n *\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin cellBehaviors\n */\nclass EditableTableEditorRowcol extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host #label {\n          margin: 0;\n          padding: 0;\n        }\n        :host paper-menu-button {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n        }\n        :host paper-button {\n          margin: 0;\n          display: block;\n          text-transform: none;\n          text-align: left;\n          background-color: transparent;\n          padding-top: var(--editable-table-row-vertical-padding);\n          padding-bottom: var(--editable-table-row-vertical-padding);\n          font-family: var(--editable-table-secondary-font-family);\n        }\n        :host([condensed]) paper-button {\n          padding-top: var(--editable-table-row-vertical-padding-condensed);\n          padding-bottom: var(--editable-table-row-vertical-padding-condensed);\n        }\n      </style>\n      <paper-menu-button id=\"menu\">\n        <paper-button slot=\"dropdown-trigger\">\n          <span id=\"label\">[[label]]</span>\n          <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n        </paper-button>\n        <paper-listbox slot=\"dropdown-content\" label$=\"[[label]]\">\n          <paper-button on-click=\"_onInsertBefore\"\n            >Insert [[_getType(row)]] Before</paper-button\n          >\n          <paper-button on-click=\"_onInsertAfter\"\n            >Insert [[_getType(row)]] After</paper-button\n          >\n          <paper-button on-click=\"_onDelete\"\n            >Delete [[_getType(row)]]</paper-button\n          >\n        </paper-listbox>\n      </paper-menu-button>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-editor-rowcol\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the row or column\n       */\n      index: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Label of the row or column\n       */\n      label: {\n        type: String,\n        computed: \"_getLabel(index,type)\"\n      },\n      /**\n       * Whether the menu button controls a row\n       */\n      row: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  /**\n   * Fires Delete Row/Column is clicked\n   * @param {boolean} row whether it's row\n   * @returns {string} \"Row of \"Column\"\"\n   */\n  _getType(row) {\n    return row ? \"Row\" : \"Column\";\n  }\n  /**\n   * Fires when  selection is made from menu button\n   * @event delete-rowcol\n   * @param {number} index the index to perform the action\n   * @param {boolean} whether the action is to insert\n   */\n  rowColAction(index = this.index, insert = true) {\n    this.dispatchEvent(\n      new CustomEvent(\"rowcol-action\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          insert: insert,\n          row: this.row,\n          index: index\n        }\n      })\n    );\n  }\n  /**\n   * Handles when Delete Row/Column is clicked\n   * @param {event} e the button event\n   */\n  _onDelete(e) {\n    this.rowColAction(this.index, false);\n  }\n  /**\n   * Handles when Insert Row/Column is clicked\n   * @param {event} e the button event\n   */\n  _onInsertBefore(e) {\n    this.rowColAction(this.row ? this.index - 1 : this.index);\n  }\n  /**\n   * Handles when Insert Row/Column After is clicked\n   * @param {event} e the button event\n   */\n  _onInsertAfter(e) {\n    this.rowColAction(this.row ? this.index : this.index + 1);\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorRowcol.tag,\n  EditableTableEditorRowcol\n);\nexport { EditableTableEditorRowcol };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `editable-table-iconset`\n * `An icon set of sort and filter icons specifically for editable-table.`\n *\n * Example:\n *   <script>import \"@lrnwebcomponents/hax-iconset/editable-table-iconset.js\";</script>\n *   <iron-icon icon=\"editable-table:filter\"></iron-icon>\n *\n * @polymer\n * @pseudoElement editable-table-iconset\n * @demo demo/display.html\n */\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\n\nimport { html } from \"@polymer/polymer/lib/utils/html-tag.js\";\n\nconst template = html`\n  <iron-iconset-svg size=\"24\" name=\"editable-table\">\n    <!-- column headers -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"column-headers\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"3\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- row-headers -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-headers\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"3\" width=\"6\" height=\"18\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- row-striped -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-striped\">\n          <rect style=\"opacity: 0.4\" x=\"3\" y=\"3\" width=\"18\" height=\"6\" />\n          <rect style=\"opacity: 0.4\" x=\"3\" y=\"15\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- footer -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"footer\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"15\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- filter -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"filter\">\n          <path d=\"M5,7l7,7,7-7Z\"></path>\n          <rect x=\"11\" y=\"13\" width=\"2\" height=\"4\"></rect>\n        </g>\n      </defs>\n    </svg>\n    <!-- row-condensed -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-condensed\">\n          <path\n            d=\"M20,2H4A2,2,0,0,0,2,4V20a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V4A2,2,0,0,0,20,2ZM8,20H4V17.5H8Zm0-4.5H4V13H8ZM8,11H4V8.74H8ZM8,6.5H4V4H8ZM14,20H10V17.5h4Zm0-4.5H10V13h4ZM14,11H10V8.74h4Zm0-4.5H10V4h4ZM20,20H16V17.5h4Zm0-4.5H16V13h4ZM20,11H16V8.5h4Zm0-4.5H16V4h4Z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- filter off -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"filter-off\">\n          <polygon\n            points=\"19.26 6.95 10.7 6.95 14.98 11.23 19.26 6.95\"\n          ></polygon>\n          <polygon\n            points=\"5 4.92 7.03 6.95 5.26 6.95 11.26 12.95 11.26 16.95 13.26 16.95 13.26 13.18 17.57 17.49 18.49 16.57 5.92 4 5 4.92\"\n          ></polygon>\n        </g>\n      </defs>\n    </svg>\n    <!-- sortable -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"sortable\">\n          <path d=\"M7,13l5,5l5-5H7z M17,11l-5-5l-5,5H17z\"></path>\n        </g>\n      </defs>\n    </svg>\n  </iron-iconset-svg>\n`;\n\ndocument.head.appendChild(template.content);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/device-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-toggle`\n * `A toggle button for an property in the editable-table interface (editable-table.html).`\n *\n * @microcopy - language worth noting:\n * ```\n <editable-table-editor-toggle\n  hidden                           //Hide and disable this toggle? Default is false.\n  label=\"Condensed\"                //The label for the toggle button\n  prop=\"condensed\"                 //The property controlled by this toggle\n  tooltip=\"Condense cell height.\"  //A tooltip for this toggle.\n  value=\"true\">                    //The value of this toggle.\n</editable-table-editor-toggle>```\n *  \n * @demo demo/editor.html\n * \n * @polymer\n * @customElement\n */\nclass EditableTableEditorToggle extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host([hidden]) {\n          display: none;\n        }\n        :host paper-button {\n          padding: 2px;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-secondary-font-family);\n          background-color: var(--editable-table-button-bg-color);\n          color: var(--editable-table-button-color);\n        }\n        :host([toggled]) paper-button {\n          background-color: var(--editable-table-button-toggled-bg-color);\n          color: var(--editable-table-button-toggled-color);\n        }\n        :host(:not([disabled])) paper-button:focus,\n        :host(:not([disabled])) paper-button:hover {\n          background-color: var(--editable-table-button-hover-bg-color);\n          color: var(--editable-table-button-hover-color);\n          cursor: pointer;\n        }\n        :host([toggled]:not([disabled])) paper-button:focus,\n        :host([toggled]:not([disabled])) paper-button:hover {\n          background-color: var(--editable-table-button-toggled-hover-bg-color);\n          color: var(--editable-table-button-toggled-hover-color);\n          cursor: pointer;\n        }\n        :host([disabled]) paper-button {\n          background-color: var(--editable-table-button-disabled-bg-color);\n          color: var(--editable-table-button-disabled-color);\n          cursor: not-allowed;\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host #filter-off {\n          opacity: 0.25;\n        }\n      </style>\n      <label for=\"button\" class=\"sr-only\" aria-hidden>[[label]]</label>\n      <paper-button\n        id=\"button\"\n        aria-checked=\"true\"\n        aria-describedby=\"[[tooltip]]\"\n        disabled$=\"[[disabled]]\"\n        on-click=\"_onClick\"\n        role=\"switch\"\n      >\n        <span hidden$=\"[[toggled]]\" class=\"sr-only\">on</span>\n        <span hidden$=\"[[!toggled]]\" class=\"sr-only\">off</span>\n        <iron-icon icon$=\"[[icon]]\" aria-hidden=\"true\"></iron-icon>\n      </paper-button>\n      <paper-tooltip id=\"tooltip\" for=\"button\" aria-hidden=\"true\"\n        >[[label]]</paper-tooltip\n      >\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-toggle\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Whether toggle is disabled\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Table id for accessibility\n       */\n      controls: {\n        type: String,\n        value: \"table\",\n        readOnly: true,\n        reflectToAttribute: true\n      },\n      /**\n       * Button id that matches the table property to toggle\n       */\n      id: {\n        type: String,\n        value: null\n      },\n      /**\n       * Button icon\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /**\n       * Button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * Whether the button is toggled\n       */\n      toggled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Fires when button is clicked\n   * @event change\n   */\n  _onClick() {\n    this.toggled = !this.toggled;\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorToggle.tag,\n  EditableTableEditorToggle\n);\nexport { EditableTableEditorToggle };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n\n/**\n * `editable-table-editor-cell`\n * `An editable cell in the editable-table-editor (editable-table-editor.html) interface.`\n *\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin cellBehaviors\n */\nclass EditableTableEditorCell extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          padding: 0;\n          margin: 0;\n          width: calc(\n            100% - var(--editable-table-row-horizontal-padding) -\n              var(--editable-table-row-horizontal-padding)\n          );\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n        }\n        :host iron-autogrow-textarea {\n          width: 100%;\n          padding: 0;\n          border: none;\n          font-weight: unset;\n          resize: none;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n          flex-grow: 1;\n          --iron-autogrow-textarea: {\n            padding: 0;\n            font-weight: unset;\n            border: none;\n            resize: none;\n            flex-direction: column;\n            -webkit-flex-direction: column;\n            -webkit-appearance: none;\n            -mozilla-appearance: none;\n          }\n        }\n        :host iron-autogrow-textarea > * {\n          padding: 0;\n          font-weight: unset;\n          border: none;\n          resize: none;\n          flex-direction: column;\n          -webkit-flex-direction: column;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n        }\n      </style>\n      <iron-autogrow-textarea\n        autofocus\n        id=\"cell\"\n        label$=\"[[label]]\"\n        on-value-changed=\"_onValueChanged\"\n        value$=\"{{value}}\"\n      >\n      </iron-autogrow-textarea>\n      <div id=\"icons\"><slot></slot></div>\n      <iron-a11y-keys\n        id=\"down\"\n        keys=\"down\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellBelow\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"up\"\n        keys=\"up\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellAbove\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"left\"\n        keys=\"left\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellLeft\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"right\"\n        keys=\"right\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellRight\"\n      >\n      </iron-a11y-keys>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-cell\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Cell row\n       */\n      row: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Cell column\n       */\n      column: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Cell label\n       */\n      label: {\n        type: String,\n        computed: \"_getCellLabel(column,row)\"\n      },\n      /**\n       * Cell contents\n       */\n      value: {\n        type: String,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Sets iron-a11y-keys target to this\n   */\n  ready() {\n    super.ready();\n    this.cell = this.$.cell;\n  }\n\n  /**\n   * Focuses the on text area\n   */\n  focus() {\n    this.cell.textarea.focus();\n  }\n\n  /**\n   * Gets the cell label, as in \"Cell B2\"\n   * @param {number} column the column index\n   * @param {number} row the row index\n   * @returns {string} a label (eg., \"Cell B2\")\n   */\n  _getCellLabel(column, row) {\n    return \"Cell \" + this._getLabel(column, false) + this._getLabel(row, true);\n  }\n\n  /**\n   * Fires when cell value changes to notify table\n   * @event cell-value-changed\n   * @param {event} e the change event\n   */\n  _onValueChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          row: this.row,\n          column: this.column,\n          value: e.detail.value\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the caret (cursor) position of the specified text field.\n   * FROM: https://stackoverflow.com/questions/2897155/get-cursor-position-in-characters-within-a-text-input-field\n   * @returns {number} the caret position (value range is 0-oField.value.length).\n   */\n  getCaretPosition() {\n    var caret = 0;\n    // IE Support\n    if (document.selection) {\n      // Set focus on the element\n      this.$.cell.focus();\n      // To get cursor position, get empty selection range\n      var sel = document.selection.createRange();\n      // Move selection start to 0 position\n      sel.moveStart(\"character\", -this.$.cell.value.length);\n      // The caret position is selection length\n      caret = sel.text.length;\n    } else if (\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart ||\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart == \"0\"\n    ) {\n      caret = this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart;\n    }\n    return caret;\n  }\n\n  /**\n   * make sure caret is in the correct position\n   * @param {number} start the start position of the caret\n   * @param {number} end the start position of the caret\n   */\n  setCaretPosition(start, end) {\n    let textarea = this.$.cell.shadowRoot.querySelector(\"textarea\");\n    textarea.focus();\n    if (textarea.createTextRange) {\n      let range = textarea.createTextRange();\n      range.collapse(true);\n      range.moveEnd(\"character\", end);\n      range.moveStart(\"character\", start);\n      range.select();\n    } else if (textarea.setSelectionRange) {\n      textarea.setSelectionRange(start, end);\n      textarea.selectionStart = start;\n      textarea.selectionEnd = end;\n    }\n  }\n\n  /**\n   * set focus to textarea and selects text as needed\n   * @param {number} start the start position of the caret\n   * @param {number} end the start position of the caret\n   */\n  setFocus(start, end) {\n    this.$.cell.shadowRoot.querySelector(\"textarea\").focus();\n    if (start !== undefined && end !== undefined) {\n      this.setCaretPosition(start, end);\n    } else if (start !== undefined) {\n      this.setCaretPosition(start, start);\n    } else {\n      this.setCaretPosition(0, 0);\n    }\n  }\n\n  /**\n   * fired when using keyboard to navigate left\n   * @event cell-move\n   */\n  _onCellLeft() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"left\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate right\n   * @event cell-move\n   */\n  _onCellRight() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"right\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate up\n   * @event cell-move\n   */\n  _onCellAbove() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"up\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate down\n   * @event cell-move\n   */\n  _onCellBelow() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"down\" }\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorCell.tag,\n  EditableTableEditorCell\n);\nexport { EditableTableEditorCell };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `editable-table-styles`\n * `a shared set of styles for editable-table`\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nconst styleElement = document.createElement(\"dom-module\");\n\nconst css = html`\n  <style is=\"custom-style\">\n    :host {\n      display: block;\n      width: 100%;\n      max-width: 100%;\n      margin: 15px 0;\n      --editable-table-font-size: unset;\n      --editable-table-secondary-font-size: 12px;\n      --editable-table-caption-font-size: var(--editable-table-font-size);\n      --editable-table-font-family: inherit;\n      --editable-table-secondary-font-family: \"Roboto\", \"Noto\", sans-serif;\n      font-family: var(--editable-table-font-family);\n\n      --editable-table-light-weight: 200;\n      --editable-table-medium-weight: 300;\n      --editable-table-heavy-weight: 600;\n      --editable-table-color: #222;\n      --editable-table-bg-color: #fff;\n      --editable-table-caption-bg-color: #fff;\n      --editable-table-heading-color: #000;\n      --editable-table-heading-bg-color: #ddd;\n      --editable-table-stripe-bg-color: #eee;\n\n      --editable-table-row-horizontal-padding: 4px;\n      --editable-table-row-vertical-padding: 5px;\n      --editable-table-row-vertical-padding-condensed: 2px;\n      --editable-table-row-padding: var(--editable-table-row-vertical-padding)\n        var(--editable-table-row-horizontal-padding);\n      --editable-table-row-padding-condensed: var(\n          --editable-table-row-vertical-padding-condensed\n        )\n        var(--editable-table-row-horizontal-padding);\n\n      --editable-table-border-width: 1px;\n      --editable-table-border-style: solid;\n      --editable-table-border-color: #999;\n      --editable-table-border: var(--editable-table-border-width)\n        var(--editable-table-border-style) var(--editable-table-border-color);\n\n      --editable-table-caption-color: var(--editable-table-color);\n      --editable-table-button-color: var(--editable-table-border-color);\n      --editable-table-button-bg-color: var(--editable-table-bg-color);\n      --editable-table-button-toggled-color: var(--editable-table-color);\n      --editable-table-button-toggled-bg-color: var(--editable-table-bg-color);\n      --editable-table-button-hover-color: var(--editable-table-button-color);\n      --editable-table-button-toggled-hover-color: var(\n        --editable-table-heading-color\n      );\n      --editable-table-button-hover-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --editable-table-button-toggled-hover-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --editable-table-button-disabled-color: var(\n        --editable-table-border-color\n      );\n      --editable-table-button-disabled-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --secondary-text-color: var(--editable-table-border-color);\n      --simple-picker-option-size: 24px;\n      --simple-picker-option: {\n        font-family: var(--editable-table-secondary-font-family);\n        color: var(--editable-table-color);\n        background-color: var(--editable-table-bg-color);\n        font-size: var(--editable-table-secondary-font-size);\n      }\n      --editable-table-style-stripe: {\n        background-color: var(--editable-table-stripe-bg-color);\n      }\n      --editable-table-style-column-header: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n        background-color: var(--editable-table-heading-bg-color);\n      }\n      --editable-table-style-row-header: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n      }\n      --editable-table-style-footer: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n        border-top: 3px solid var(--editable-table-color);\n      }\n      --paper-font-caption: {\n        font-family: var(--editable-table-secondary-font-family);\n      }\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    :host .sr-only {\n      position: absolute;\n      left: -9999px;\n      font-size: 0;\n      height: 0;\n      width: 0;\n      overflow: hidden;\n    }\n    :host #table {\n      width: calc(\n        100% - var(--editable-table-border-width) -\n          var(--editable-table-border-width)\n      );\n      display: table;\n      border-collapse: collapse;\n      border: var(--editable-table-border);\n    }\n    :host #table,\n    :host .th-or-td {\n      font-weight: var(--editable-table-light-weight);\n      color: var(--editable-table-color);\n      background-color: var(--editable-table-bg-color);\n    }\n    :host caption {\n      font-size: var(--editable-table-caption-font-size);\n      font-weight: var(--editable-table-heavy-weight);\n      color: var(--editable-table-caption-color);\n      background-color: var(--editable-table-caption-bg-color);\n      width: 100%;\n    }\n    :host tr {\n      display: table-row;\n    }\n    :host .th-or-td {\n      display: table-cell;\n    }\n    :host .cell {\n      padding: var(--editable-table-row-padding);\n    }\n    :host([condensed]) .th,\n    :host([condensed]) .cell {\n      padding: var(--editable-table-row-padding-condensed);\n    }\n    :host caption,\n    :host #table .th-or-td {\n      text-align: left;\n    }\n    :host #table .th-or-td[numeric] {\n      text-align: var(--editable-table-numeric-text-align, unset);\n    }\n    :host #table .td[negative] .cell {\n      color: var(--editable-table-negative-color, --editable-table-color);\n    }\n    :host editable-table-sort {\n      width: 100%;\n    }\n    ::slotted(table) {\n      display: none;\n    }\n    @media screen {\n      :host {\n        overflow-x: auto;\n        width: 100%;\n        max-width: 100%;\n      }\n    }\n  </style>\n`;\nstyleElement.appendChild(css);\n\nstyleElement.register(\"editable-table-styles\");\n\nwindow.EditableTableStyleManager = {};\nwindow.EditableTableStyleManager.instance = null;\n/**\n * Checks to see if there is an instance available, and if not appends one\n */\nwindow.EditableTableStyleManager.requestAvailability = function() {\n  if (window.EditableTableStyleManager.instance == null) {\n    window.EditableTableStyleManager.instance = document.createElement(\"style\");\n    window.EditableTableStyleManager.instance.setAttribute(\n      \"is\",\n      \"custom-style\"\n    );\n    window.EditableTableStyleManager.instance.setAttribute(\n      \"include\",\n      \"editable-table-styles\"\n    );\n    document.head.append(window.EditableTableStyleManager.instance);\n  }\n  return window.EditableTableStyleManager.instance;\n};\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-sort`\n * `A column header that functions as a three-state sort button (no sort, sort ascending, sort descending) for the table-editor-display mode (table-editor-display.html).`\n *\n * @demo demo/display.html\n *\n * @polymer\n * @customElement\n */\nclass EditableTableSort extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host(:not([sort-mode=\"asc\"])) .asc,\n        :host(:not([sort-mode=\"desc\"])) .desc,\n        :host(:not([sort-mode=\"none\"])) .none,\n        :host #asc,\n        :host #desc,\n        :host([sorting]:not([sort-mode=\"none\"])) #none {\n          display: none;\n        }\n        :host([sorting][sort-mode=\"asc\"]) #asc,\n        :host([sorting][sort-mode=\"desc\"]) #desc {\n          display: flex;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\" on-click=\"_onSortClicked\">\n        [[text]] <span class=\"sr-only asc\">(ascending)</span>\n        <span class=\"sr-only desc\">(descending)</span>\n        <span class=\"sr-only\"> Toggle sort mode.</span>\n        <iron-icon id=\"asc\" icon=\"arrow-drop-up\"></iron-icon>\n        <iron-icon id=\"desc\" icon=\"arrow-drop-down\"></iron-icon>\n        <iron-icon id=\"none\" icon=\"editable-table:sortable\"></iron-icon>\n      </paper-button>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-sort\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Sort ascending, descending or none\n       */\n      columnIndex: {\n        type: Number,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\",\n        reflectToAttribute: true\n      },\n      /**\n       * Index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1,\n        reflectToAttribute: true\n      },\n      /**\n       * Whether the column is being sorted\n       */\n      sorting: {\n        type: Boolean,\n        computed: \"_isSorting(columnIndex,sortColumn)\",\n        reflectToAttribute: true\n      },\n      /**\n       * Column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Fires when sort button is clicked\n   * @event change-sort-mode\n   */\n  _onSortClicked() {\n    this.dispatchEvent(\n      new CustomEvent(\"change-sort-mode\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n\n  /**\n   * Changes the sort mode\n   * @param {string} mode the sort mode: `asc` for ascending or `desc` for descending;\n   */\n  setSortMode(mode) {\n    this.sortMode = mode;\n    this.__checked = mode === \"asc\" ? true : mode === \"desc\" ? mode : false;\n  }\n\n  /**\n   * Determines if column number is the same as the current sort column\n   * @param {number} columnIndex the index of the column\n   * @param {number} sortColumn the index of the column being sorted\n   * @returns {boolean} whether this column is being sorted\n   */\n  _isSorting(columnIndex, sortColumn) {\n    return columnIndex === sortColumn;\n  }\n}\nwindow.customElements.define(EditableTableSort.tag, EditableTableSort);\nexport { EditableTableSort };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-filter`\n * `Displays a cell in the editable-table-display mode (editable-table-display.html) as a filter button.`\n *\n * @demo demo/display.html\n *\n * @polymer\n * @customElement\n */\nclass EditableTableFilter extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host iron-icon {\n          min-width: 24px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host #filter-off {\n          opacity: 0.25;\n        }\n        :host(:not([filtered])) .filtered,\n        :host(:not([filtered]):not(:focus):not(:hover)) #filter,\n        :host(:not([filtered]):focus) #filter-off,\n        :host(:not([filtered]):hover) #filter-off,\n        :host([filtered]:not(:focus):not(:hover)) #filter-off,\n        :host([filtered]:focus) #filter,\n        :host([filtered]:hover) #filter {\n          display: none;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\" on-click=\"_onFilterClicked\">\n        <span>[[text]]</span>\n        <span class=\"sr-only\" hidden\\$=\"[[!filtered]]\"> (filtered)</span>\n        <span class=\"sr-only\"> Toggle filter.</span>\n        <iron-icon id=\"filter\" icon=\"editable-table:filter\"></iron-icon>\n        <iron-icon id=\"filter-off\" icon=\"editable-table:filter-off\"></iron-icon>\n      </paper-button>\n      <paper-tooltip for=\"button\"\n        >Toggle Column [[columnIndex]] filter for \"[[text]]\"</paper-tooltip\n      >\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-filter\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the column\n       */\n      columnIndex: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Whether the column is filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Listens for button click\n   */\n  _getPressed(filtered) {\n    return filtered ? \"true\" : \"false\";\n  }\n\n  /**\n   * Fires when filter button is clicked\n   * @event toggle-filter\n   */\n  _onFilterClicked() {\n    this.dispatchEvent(\n      new CustomEvent(\"toggle-filter\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n}\nwindow.customElements.define(EditableTableFilter.tag, EditableTableFilter);\nexport { EditableTableFilter };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport \"@lrnwebcomponents/simple-picker/simple-picker.js\";\nimport { ResponsiveUtilityBehaviors } from \"@lrnwebcomponents/responsive-utility/lib/responsive-utility-behaviors.js\";\nimport { displayBehaviors } from \"./editable-table-behaviors.js\";\nimport \"./editable-table-sort.js\";\nimport \"./editable-table-filter.js\";\nimport \"./editable-table-styles.js\";\n\n/**\n * `editable-table-display`\n * ` An editor interface for editable-table`\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin displayBehaviors\n * @appliesMixin ResponsiveUtilityBehaviors\n */\nclass EditableTableDisplay extends displayBehaviors(\n  ResponsiveUtilityBehaviors(PolymerElement)\n) {\n  static get template() {\n    return html`\n      <style include=\"editable-table-styles\">\n        :host {\n          width: 100%;\n          max-width: 100%;\n        }\n        :host([bordered]) .th,\n        :host([bordered]) .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .tbody-tr:nth-child(2n) .th,\n        :host([striped]) .tbody-tr:nth-child(2n) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .thead-tr .th {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .tbody-tr .th {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .tfoot-tr .th,\n        :host([footer]) .tfoot-tr .td {\n          @apply --editable-table-style-footer;\n        }\n        :host #column {\n          width: calc(var(--simple-picker-option-size) + 6px);\n          overflow: visible;\n          display: none;\n          margin: 0 0 1px 10px;\n          --simple-picker-border-color: var(--editable-table-border-color);\n          --simple-picker-sample-option: {\n            position: absolute;\n            left: -9999px;\n            overflow: hidden;\n            width: 0;\n            height: 0;\n          }\n          --simple-picker-sample: {\n            width: var(--simple-picker-option-size);\n            overflow: visible;\n            border-width: 1px;\n          }\n          --simple-picker-collapse: {\n            right: calc(100% - var(--simple-picker-option-size) - 4px);\n          }\n          --simple-picker-sample-focus: {\n            border-width: 1px;\n          }\n        }\n        @media screen {\n          :host {\n            overflow-x: scroll;\n          }\n          :host([responsive][responsive-size=\"xs\"]) caption > div {\n            display: flex;\n            align-items: flex-end;\n            justify-content: space-between;\n          }\n          :host([responsive][responsive-size=\"xs\"]) #column {\n            display: inline-flex;\n          }\n          :host([responsive][responsive-size=\"xs\"]) .th[xs-hidden],\n          :host([responsive][responsive-size=\"xs\"]) .td[xs-hidden] {\n            display: none;\n          }\n        }\n      </style>\n      <iron-ajax\n        auto\n        url=\"[[dataCsv]]\"\n        hidden$=\"[[!dataCsv]]\"\n        handle-as=\"text\"\n        debounce-duration=\"500\"\n        last-response=\"{{csvData}}\"\n        on-response=\"_loadExternalData\"\n      ></iron-ajax>\n      <table id=\"table\" class=\"table\">\n        <caption>\n          <div>\n            [[caption]]\n            <slot></slot>\n            <simple-picker\n              id=\"column\"\n              aria-labelledby$=\"[[tables.0.label]]\"\n              value$=\"{{selected}}\"\n              on-change=\"_selectedChanged\"\n              options=\"[[_getTheadOptions(thead)]]\"\n            >\n            </simple-picker>\n          </div>\n        </caption>\n        <thead hidden=\"[[!columnHeader]]\">\n          <tr class=\"tr thead-tr\">\n            <template\n              is=\"dom-repeat\"\n              items=\"[[thead.0]]\"\n              as=\"th\"\n              index-as=\"index\"\n              mutable-data\n              restamp\n            >\n              <th\n                class=\"th th-or-td\"\n                cell-index$=\"[[index]]\"\n                numeric$=\"[[_isNumericColumn(index)]]\"\n                scope=\"col\"\n                xs-hidden$=\"[[_isColHidden(index,1)]]\"\n              >\n                <template is=\"dom-if\" if=\"[[sort]]\" restamp>\n                  <editable-table-sort\n                    sort-column$=\"[[sortColumn]]\"\n                    column-index=\"[[index]]\"\n                    text$=\"[[_replaceBlankCell(th)]]\"\n                  ></editable-table-sort>\n                </template>\n                <template is=\"dom-if\" if=\"[[!sort]]\" restamp\n                  >[[_replaceBlankCell(th)]]\n                </template>\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"tbody\" class=\"tbody\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[tbody]]\"\n            as=\"tr\"\n            filter=\"{{filterRows(filterColumn,filterText)}}\"\n            mutable-data\n            restamp\n          >\n            <tr class=\"tr tbody-tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[tr]]\"\n                as=\"cell\"\n                index-as=\"index\"\n                mutable-data\n                restamp\n              >\n                <template\n                  is=\"dom-if\"\n                  if=\"[[_isRowHeader(rowHeader,index)]]\"\n                  restamp\n                >\n                  <th\n                    class=\"th th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                    scope=\"row\"\n                  >\n                    [[_replaceBlankCell(cell)]]\n                  </th>\n                </template>\n                <template\n                  is=\"dom-if\"\n                  if=\"[[!_isRowHeader(rowHeader,index)]]\"\n                  restamp\n                >\n                  <td\n                    class=\"td cell th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    negative$=\"[[_isNegative(cell)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                  >\n                    <template is=\"dom-if\" if=\"[[filter]]\" restamp>\n                      <editable-table-filter\n                        column-index=\"[[index]]\"\n                        text$=\"[[_replaceBlankCell(cell)]]\"\n                        filtered$=\"[[_isFiltered(index,filterColumn,filtered)]]\"\n                      ></editable-table-filter>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[!filter]]\" restamp>\n                      <span class=\"cell\">[[_replaceBlankCell(cell)]]</span>\n                    </template>\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </template>\n        </tbody>\n        <template is=\"dom-if\" if=\"[[footer]]\">\n          <tfoot class=\"tfoot\">\n            <tr class=\"tr tfoot-tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[tfoot.0]]\"\n                as=\"cell\"\n                index-as=\"index\"\n                mutable-data\n                restamp\n              >\n                <template is=\"dom-if\" if=\"[[_isRowHeader(rowHeader,index)]]\">\n                  <th\n                    class=\"th th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                    scope=\"row\"\n                  >\n                    [[_replaceBlankCell(cell)]]\n                  </th>\n                </template>\n                <template is=\"dom-if\" if=\"[[!_isRowHeader(rowHeader,index)]]\">\n                  <td\n                    class=\"td cell th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    negative$=\"[[_isNegative(cell)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                  >\n                    [[_replaceBlankCell(cell)]]\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </tfoot>\n        </template>\n      </table>\n      <div id=\"htmlImport\" hidden><slot></slot></div>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-display\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the current filter column\n       */\n      filterColumn: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Whether table is filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Text for Filtering\n       */\n      filterText: {\n        type: String,\n        value: null\n      },\n      /**\n       * Selected column to display when in responsive mode\n       */\n      selected: {\n        type: Number,\n        value: 1\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\"\n      },\n      /**\n       * Index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1\n      }\n    };\n  }\n\n  /**\n   * Fires when data changed\n   * @event change\n   * @param {event} the event\n   */\n  _dataChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: e\n      })\n    );\n  }\n\n  /**\n   * Gets the columns in `<thead>`\n   * @param {array} data the table data as an array\n   * @param {boolean} columnHeader does the table have a column header\n   * @returns {array} the `<thead>`data\n   */\n  _getTheadOptions(thead) {\n    let temp = [];\n    if (thead !== undefined && thead !== null && thead.length > 0) {\n      for (let i = 1; i < thead[0].length; i++) {\n        temp.push([{ alt: thead[i], value: i }]);\n      }\n    }\n    return temp;\n  }\n  /**\n   * Determines whether or not a cell is hidden in responsive mode\n   * @param {number} index the current column number\n   * @param {number} selected the selected column number\n   * @returns {boolean} whether the column is hidden (i.e. not the selected column)\n   */\n  _isColHidden(index, selected) {\n    return parseInt(index) !== 0 && parseInt(index) !== parseInt(selected);\n  }\n\n  /**\n   * Sets a column's cells to filtered when in filtered mode so that filter can toggle\n   * @param {number} index the current column number\n   * @param {number} selected the filtered column number\n   * @param {boolean} filtered is the table in filtered mode\n   * @returns {boolean} whether the column is filtered\n   */\n  _isFiltered(column, filterColumn, filtered) {\n    return filterColumn !== null && filterColumn === column && filtered;\n  }\n\n  /**\n   * Sets a cell's negative number style\n   * @param {string} cell the cell contents\n   * @returns {boolean} whether cell contents are numeric and negative\n   */\n  _isNegative(cell) {\n    return this._isNumeric(cell) && cell.trim().indexOf(\"-\") === 0;\n  }\n\n  /**\n   * Determines if an entire body column dontains numeric data\n   * @param {number} index the column index\n   * @returns {boolean} if columns contents are numeric\n   */\n  _isNumericColumn(index) {\n    let numeric = true;\n    for (let i = 0; i < this.tbody.length; i++) {\n      if (!this._isNumeric(this.tbody[i][index])) numeric = false;\n    }\n    return numeric;\n  }\n\n  /**\n   * Calculates whether the cell is a `<th>` or `<td>`\n   * @param {boolean} rowHeader if the cell is a rowheader\n   * @param {number} index the current column number\n   * @returns {boolean} whether the cell is a `<th>` or `<td>`\n   */\n  _isRowHeader(rowHeader, index) {\n    return index === 0 && rowHeader;\n  }\n\n  /**\n   * Handles table change\n   */\n  _tableChanged() {\n    this._updateCols();\n  }\n\n  /**\n   * Handles column  selector change\n   */\n  _selectedChanged() {\n    this._updateCols();\n  }\n\n  /**\n   * Handles sort button click\n   * @param {event} e the event\n   */\n  _changeSortMode(e) {\n    if (this.sortColumn === e.detail.columnIndex && this.sortMode === \"asc\") {\n      this.sortMode = \"desc\";\n    } else if (\n      this.sortColumn === e.detail.columnIndex &&\n      this.sortMode === \"desc\"\n    ) {\n      this.sortMode = \"none\";\n    } else {\n      this.sortMode = \"asc\";\n      this.sortColumn = e.detail.columnIndex;\n    }\n    e.detail.setSortMode(this.sortMode);\n    this.sortData(this.sortMode, e.detail.columnIndex);\n  }\n\n  /**\n   * update the responsive columns menu\n   */\n  _updateCols() {\n    let selected = this.$.column.value,\n      cols = this.$.table.querySelectorAll(\"th,td\");\n    if (cols.length > 0) {\n      for (let i = 0; i < cols.length; i++) {\n        let col = cols[i];\n        if (this._isColHidden(col.cellIndex, selected)) {\n          col.setAttribute(\"xs-hidden\", true);\n        } else {\n          col.removeAttribute(\"xs-hidden\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle filter based on collumn and text of cell that is clicked\n   * @param {number} filterColumn the number of the column to be filtered\n   * @param {string} filterText the text that will be filtered\n   * @returns\n   */\n  filterRows(filterColumn, filterText) {\n    if (filterText !== undefined && filterText !== null) {\n      return function(tr) {\n        return (\n          tr[filterColumn].toLowerCase().trim() ===\n          filterText.toLowerCase().trim()\n        );\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * initialize the responsive columns menu\n   */\n  sortData(type, column) {\n    if (type !== \"none\" && type !== false) {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        temp[i].unshift(temp[i][column]);\n      }\n      if (type === \"asc\") {\n        temp.sort();\n      } else {\n        temp.reverse();\n      }\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"tbody.\" + i, []);\n        this.set(\"tbody.\" + i, temp[i].slice(1));\n      }\n    } else {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"data.\" + (i + 1), []);\n        this.set(\"data.\" + (i + 1), temp[i].slice());\n      }\n    }\n  }\n\n  /**\n   * Handle filter button click\n   */\n  toggleFilter(e) {\n    if (\n      e === undefined ||\n      (this.filterColumn == e.detail.columnIndex && this.filtered)\n    ) {\n      this.filtered = false;\n      this.filterText = null;\n      this.filterColumn = null;\n    } else {\n      this.filterText = e.detail.text;\n      this.filterColumn = e.detail.columnIndex;\n      this.filtered = true;\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\n        \"change-sort-mode\",\n        this._changeSortMode.bind(this)\n      );\n      this.addEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"change-sort-mode\",\n      this._changeSortMode.bind(this)\n    );\n    this.removeEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(EditableTableDisplay.tag, EditableTableDisplay);\nexport { EditableTableDisplay };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport { displayBehaviors } from \"./lib/editable-table-behaviors.js\";\nimport \"./lib/editable-table-editor-rowcol.js\";\nimport \"./lib/editable-table-editor-toggle.js\";\nimport \"./lib/editable-table-editor-cell.js\";\nimport \"./lib/editable-table-styles.js\";\nimport \"./lib/editable-table-display.js\";\n\n/**\n * `editable-table`\n * `An editor interface for tables that toggles between view mode.`\n *\n### Styling\n\n`<editable-table>` provides the following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--editable-table-font-size` | Main size for the  table. | unset;\n`--editable-table-secondary-font-size` | Smaller font size for the table for minor UI elements. | 12px;\n`--editable-table-caption-font-size` | Font size for the table caption. | var(--editable-table-font-size);\n`--editable-table-font-family` | Main font-family for the table. | inherit;\n`--editable-table-secondary-font-family` | Secondary font-familt for the table's minor UI elements | \"Roboto\", \"Noto\", sans-serif;\n`--editable-table-light-weight` | The lightest table font-weight, for minor UI elements. | 200;\n`--editable-table-medium-weight` | The default table font-weight. | 300;\n`--editable-table-heavy-weight` | The heaviest table font-weight, for emphasis and table  caption. | 600;\n`--editable-table-color` | The table text color. | #222;\n`--editable-table-bg-color` | The table background color. | #fff;\n`--editable-table-caption-color` | The caption text color. | var(--editable-table-color);\n`--editable-table-caption-bg-color` | The caption background color. | #fff;\n`--editable-table-heading-color` | The row/column heading text color. | #000;\n`--editable-table-heading-bg-color` | The row/column heading background color. | #ddd;\n`--editable-table-stripe-bg-color` | The background color for alternating row striping. | #eee;\n`--editable-table-border-width` | The border width for table. | 1px;\n`--editable-table-border-style` | The border style for table. | solid;\n`--editable-table-border-color` | The border color for table. | #999;\n`--editable-table-border` | The table border. | var(--editable-table-border-width) var(--editable-table-border-style) var(--editable-table-border-color);\n`--editable-table-button-color` | The default text color of the toggle buttons. | var(--editable-table-border-color);\n`--editable-table-button-bg-color` | The default background color of the toggle buttons. | var(--editable-table-bg-color);\n`--editable-table-button-toggled-color` | The text color of the toggle buttons when toggled. | var(--editable-table-color);\n`--editable-table-button-toggled-bg-color` | The background color of the toggle buttons when toggled. | var(--editable-table-bg-color);\n`--editable-table-button-hover-color` | The text color of the toggle buttons when hovered or focused. | var(--editable-table-button-color);\n`--editable-table-button-hover-bg-color` | The background color of the toggle buttons when hovered or focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-toggled-hover-color` | The text color of the toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-color);\n`--editable-table-button-toggled-hover-bg-color` | The background color of the toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-disabled-color` | The text color of the toggle buttons when disabled. | var(--editable-table-border-color);\n`--editable-table-button-disabled-bg-color` | The background color of the toggle buttons when disabled. | var(--editable-table-heading-bg-color);\n`--editable-table-row-horizontal-padding` | Horizontal appding for cells. | 4px;\n`--editable-table-row-vertical-padding` | Default vertical padding for cells (determines row hight and whitespace). | 5px;\n`--editable-table-row-vertical-padding-condensed` | Smaller vertical padding for cells (determines condensed row hight and whitespace). | 2px;\n`--editable-table-row-padding` | Overall default padding for cells. | var(--editable-table-row-vertical-padding) var(--editable-table-row-horizontal-padding);\n`--editable-table-row-padding-condensed` | Overall condensed padding for cells. | var(--editable-table-row-vertical-padding-condensed)var(--editable-table-row-horizontal-padding);\n`--editable-table-style-stripe` | Styles applied to striped rows. | { background-color: var(--editable-table-stripe-bg-color); }\n`--editable-table-style-column-header` | Styles applied to column headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); background-color: var(--editable-table-heading-bg-color); }\n`--editable-table-style-row-header` | Styles applied to row headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); }\n`--editable-table-style-footer` | Styles applied to table footer. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); border-top: 3px solid var(--editable-table-color); }\n *\n * @demo demo/index.html\n * @demo demo/importing.html Importing Data\n * @demo demo/exporting.html Exporting Data\n * @demo demo/display.html Display Only\n * @demo demo/advanced.html Advanced Features\n * \n * @customElement\n * @polymer\n * @appliesMixin displayBehaviors\n * @appliesMixin EditBehaviors\n */\nclass EditableTable extends displayBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"editable-table-styles\">\n        :host {\n          display: block;\n          width: 100%;\n        }\n        :host caption {\n          width: 100%;\n          margin-bottom: 0;\n        }\n        :host label,\n        :host .label {\n          font-size: var(--editable-table-secondary-font-size);\n          font-family: var(--editable-table-secondary-font-family);\n        }\n        :host .filter-icon,\n        :host .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) tbody .tr:first-child .sortable-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host #table {\n          min-width: calc(100% - 2.3px);\n          width: unset;\n        }\n        :host caption,\n        :host .th-or-td {\n          border: 1px solid #ddd;\n        }\n        :host .th,\n        :host th {\n          padding: 0;\n          vertical-align: center;\n          color: black;\n          background-color: #f0f0f0;\n          outline: var(--editable-table-border);\n        }\n        :host .th:first-child {\n          width: 96px;\n        }\n        :host .td {\n          vertical-align: top;\n        }\n        :host([bordered]) .td {\n          border: var(--editable-table-border);\n        }\n        :host([responsive]) thead .th:nth-of-type(3),\n        :host([responsive]) .td:nth-of-type(2) {\n          border-right-width: calc(var(--editable-table-border-width) + 5px);\n          border-right-style: double;\n        }\n        :host([bordered]) thead .th:not(:first-child) {\n          border-bottom: var(--editable-table-border);\n        }\n        :host([striped][column-header])\n          tbody\n          .tr:nth-child(2n + 1):not(:first-of-type)\n          .td,\n        :host([striped]:not([column-header])) tbody .tr:nth-child(2n) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) tbody .tr:first-child .td {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) tbody .tr .td:first-of-type {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) tbody .tr:last-of-type .td {\n          @apply --editable-table-style-footer;\n        }\n        :host caption,\n        :host .field-group {\n          width: 100%;\n          padding: 0;\n          margin: 0;\n          transition: all 2s;\n          color: var(--editable-table-caption-color);\n        }\n        :host .field-group:not([hidden]) {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        :host caption > *,\n        :host .field-group > * {\n          margin: 0 2.5px;\n        }\n        :host .field-group .field-group {\n          color: var(--editable-table-caption-color);\n          width: unset;\n        }\n        @media screen {\n        }\n      </style>\n      <iron-ajax\n        auto\n        hidden$=\"[[!dataCsv]]\"\n        url=\"[[dataCsv]]\"\n        handle-as=\"text\"\n        debounce-duration=\"500\"\n        last-response=\"{{csvData}}\"\n        on-response=\"_loadExternalData\"\n      ></iron-ajax>\n      <editable-table-display\n        bordered$=\"[[bordered]]\"\n        caption$=\"[[caption]]\"\n        column-header$=\"[[columnHeader]]\"\n        data=\"[[data]]\"\n        condensed$=\"[[condensed]]\"\n        filter$=\"[[filter]]\"\n        footer$=\"[[footer]]\"\n        hidden$=\"[[editMode]]\"\n        responsive$=\"[[responsive]]\"\n        row-header$=\"[[rowHeader]]\"\n        sort$=\"[[sort]]\"\n        striped$=\"[[striped]]\"\n      >\n      </editable-table-display>\n      <div id=\"table-outer\" hidden$=\"[[!editMode]]\">\n        <p class=\"sr-only\">Table Editor</p>\n        <table\n          id=\"table\"\n          bordered$=\"[[bordered]]\"\n          condensed$=\"[[condensed]]\"\n          striped$=\"[[striped]]\"\n        >\n          <caption>\n            <p class=\"sr-only\">Edit Mode for</p>\n            <paper-input\n              id=\"caption\"\n              label=\"Caption\"\n              placeholder=\"A title for the table.\"\n              on-change=\"_captionChanged\"\n              value$=\"{{caption}}\"\n            >\n            </paper-input>\n          </caption>\n          <thead>\n            <tr class=\"tr\">\n              <th class=\"th th-or-td\" scope=\"col\">\n                <span class=\"sr-only\">Row Operations</span>\n              </th>\n              <template\n                id=\"headers\"\n                is=\"dom-repeat\"\n                items=\"[[data]]\"\n                as=\"row\"\n                index-as=\"tr\"\n                mutable-data\n                restamp\n              >\n                <template is=\"dom-if\" if=\"[[_isFirstRow(tr)]]\" restamp>\n                  <template\n                    id=\"headercols\"\n                    is=\"dom-repeat\"\n                    items=\"[[row]]\"\n                    as=\"cell\"\n                    index-as=\"th\"\n                    mutable-data\n                    restamp\n                  >\n                    <th class=\"th th-or-td col-[[th]]\" scope=\"col\">\n                      <editable-table-editor-rowcol\n                        index$=\"[[th]]\"\n                        condensed$=\"[[condensed]]\"\n                        on-rowcol-action=\"_handleRowColumnMenu\"\n                      >\n                      </editable-table-editor-rowcol>\n                    </th>\n                  </template>\n                </template>\n              </template>\n            </tr>\n          </thead>\n          <tbody id=\"tbody\">\n            <template\n              id=\"rows\"\n              is=\"dom-repeat\"\n              items=\"[[data]]\"\n              as=\"row\"\n              index-as=\"tr\"\n              mutable-data\n              restamp\n            >\n              <tr class=\"tr tbody-tr\">\n                <th class=\"th th-or-td\" scope=\"row\">\n                  <editable-table-editor-rowcol\n                    index$=\"[[tr]]\"\n                    condensed$=\"[[condensed]]\"\n                    on-rowcol-action=\"_handleRowColumnMenu\"\n                    row\n                  >\n                  </editable-table-editor-rowcol>\n                </th>\n                <template\n                  id=\"columns\"\n                  index-as=\"td\"\n                  is=\"dom-repeat\"\n                  items=\"[[row]]\"\n                  as=\"cell\"\n                  mutable-data\n                  restamp\n                >\n                  <td class=\"td th-or-td\" on-click=\"_onCellClick\">\n                    <editable-table-editor-cell\n                      class=\"cell\"\n                      column=\"[[td]]\"\n                      row=\"[[tr]]\"\n                      on-cell-move=\"_onCellMove\"\n                      on-change=\"_onCellValueChange\"\n                      value=\"{{cell}}\"\n                    >\n                      <iron-icon\n                        class=\"sortable-icon\"\n                        icon=\"editable-table:sortable\"\n                        aria-hidden=\"true\"\n                      ></iron-icon>\n                      <iron-icon\n                        class=\"filter-icon\"\n                        icon=\"editable-table:filter-off\"\n                      ></iron-icon>\n                    </editable-table-editor-cell>\n                  </td>\n                </template>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n        <div class=\"field-group\">\n          <div class=\"field-group\">\n            <div class=\"label\">Headers and footers</div>\n            <editable-table-editor-toggle\n              id=\"columnHeader\"\n              icon=\"editable-table:column-headers\"\n              label=\"First row has column headers.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[columnHeader]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"rowHeader\"\n              icon=\"editable-table:row-headers\"\n              on-change=\"_onTableSettingChange\"\n              label=\"First column has row headers.\"\n              toggled$=\"[[rowHeader]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"footer\"\n              icon=\"editable-table:footer\"\n              label=\"Last row is a footer.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[footer]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n          <div class=\"field-group\" hidden$=\"[[hideDisplay]]\">\n            <div class=\"label\">Display</div>\n            <editable-table-editor-toggle\n              id=\"bordered\"\n              disabled$=\"[[hideBordered]]\"\n              hidden$=\"[[hideBordered]]\"\n              icon=\"image:grid-on\"\n              label=\"Borders.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[bordered]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"striped\"\n              disabled$=\"[[hideStriped]]\"\n              hidden$=\"[[hideStriped]]\"\n              icon=\"editable-table:row-striped\"\n              label=\"Alternating rows.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[striped]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"condensed\"\n              disabled$=\"[[hideCondensed]]\"\n              hidden$=\"[[hideCondensed]]\"\n              icon=\"editable-table:row-condensed\"\n              label=\"Condensed rows.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[condensed]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"responsive\"\n              disabled$=\"[[hideResponsive]]\"\n              hidden$=\"[[hideResponsive]]\"\n              icon=\"device:devices\"\n              label=\"Adjust width to screen size.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[responsive]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n          <div class=\"field-group\" hidden$=\"[[hideSortFilter]]\">\n            <div class=\"label\">Sorting and Filtering</div>\n            <editable-table-editor-toggle\n              id=\"sort\"\n              disabled$=\"[[hideSort]]\"\n              hidden$=\"[[hideSort]]\"\n              label=\"Column sorting.\"\n              icon=\"editable-table:sortable\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[sort]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"filter\"\n              disabled$=\"[[hideFilter]]\"\n              hidden$=\"[[hideFilter]]\"\n              icon=\"editable-table:filter\"\n              label=\"Column filtering.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[filter]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n        </div>\n      </div>\n      <div id=\"htmlImport\" hidden><slot></slot></div>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Is the table in edit-mode? Default is false (display mode).\n       */\n      editMode: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the borders table styles menu option\n       */\n      hideBordered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the condensed table styles menu option\n       */\n      hideCondensed: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the table display menu group\n       */\n      hideDisplay: {\n        type: Boolean,\n        computed:\n          \"_tableDisplayHidden(hideBordered,hideCondensed,hideStriped,hideResponsive)\"\n      },\n      /**\n       * Hide the filtering option.\n       */\n      hideFilter: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the table sorting & filtering menu group\n       */\n      hideSortFilter: {\n        type: Boolean,\n        computed: \"_tableSortHidden(hideSort,hideFilter)\"\n      },\n      /**\n       * Hide the sorting option.\n       */\n      hideSort: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the responsive table styles menu option\n       */\n      hideResponsive: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the striped table styles menu option\n       */\n      hideStriped: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Delete a column at the given index\n   * @param {number} index the index of the column\n   */\n  deleteColumn(index) {\n    if (confirm(\"Delete entire column?\")) {\n      for (let i = 0; i < this.data.length; i++) {\n        this.splice(\"data.\" + i, index, 1);\n      }\n    }\n  }\n\n  /**\n   * Delete a row at the given index\n   * @param {number} index the index of the row\n   */\n  deleteRow(index) {\n    if (confirm(\"Delete entire row?\")) {\n      this.splice(\"data\", index, 1);\n    }\n  }\n\n  /**\n   * Insert a column at the given index\n   * @param {number} index the index of the column\n   */\n  insertColumn(index) {\n    let temp = this.data.slice();\n    for (let i = 0; i < temp.length; i++) {\n      temp[i].splice(index, 0, \"\");\n    }\n    this.set(\"data\", temp);\n  }\n\n  /**\n   * Insert a row at the given index\n   * @param {number} index the index of the row\n   */\n  insertRow(index) {\n    let temp = this.data.slice(),\n      temp2 = new Array();\n    for (let i = 0; i < temp[0].length; i++) {\n      temp2.push(\"\");\n    }\n    temp.splice(index + 1, 0, temp2);\n    this.set(\"data\", temp);\n  }\n\n  /**\n   * Toggles between edit-mode and display mode.\n   * @event toggle-edit-mode\n   * @param {boolean} edit Toggle edit mode on? Default is toggle from current mode.\n   */\n  toggleEditMode(edit) {\n    edit = edit !== undefined ? edit : !this.editMode;\n    this.dispatchEvent(\n      new CustomEvent(\"toggle-edit-mode\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n    if (edit) {\n      this.shadowRoot.querySelector(\"editable-table-display\").toggleFilter();\n      this.shadowRoot.querySelector(\"editable-table-display\").sortData(false);\n    }\n    this.editMode = edit;\n  }\n  /**\n   * Handles when the caption paper-input changed\n   */\n  _captionChanged() {\n    this.caption = this.$.caption.value;\n  }\n\n  /**\n   * Fires when data changed\n   * @event change\n   * @param {event} the event\n   */\n  _dataChanged(e) {}\n\n  /**\n   * Gets the row data for a given row index\n   * @param {number} index the index of the row\n   * @param {array} data the table data\n   * @returns {array} row data\n   */\n  _getCurrentRow(index, data) {\n    let row = null;\n    if (\n      data !== undefined &&\n      data !== null &&\n      data[index] !== undefined &&\n      data[index] !== null\n    ) {\n      row = data[index];\n    }\n    return row;\n  }\n\n  /**\n   * Handles row/column menu actions\n   * @param {event} e the event\n   */\n  _handleRowColumnMenu(e) {\n    if (e.detail.insert && e.detail.row) {\n      this.insertRow(e.detail.index);\n    } else if (e.detail.insert && !e.detail.row) {\n      this.insertColumn(e.detail.index);\n    } else if (!e.detail.insert && e.detail.row) {\n      this.deleteRow(e.detail.index);\n    } else {\n      this.deleteColumn(e.detail.index);\n    }\n  }\n\n  /**\n   * Tests for first row of data. Workaround to restamp column headers.\n   * @param {number} index the index of the row\n   */\n  _isFirstRow(index) {\n    return index === 0;\n  }\n\n  /**\n   * Sets focus on the cell's textarea if the cell is clicked\n   * @param {event} e the event\n   */\n  _onCellClick(e) {\n    if (e.model && e.model.root && e.model.root.nodeList[0]) {\n      e.model.root.nodeList[0].focus();\n    }\n  }\n\n  /**\n   * Moves the focus/cursor to the correct cell when navigation keys are pressed\n   * @param {event} e the event\n   */\n  _onCellMove(e) {\n    let dir = e.detail.direction,\n      cell = e.detail.cell;\n    let row = cell.parentNode,\n      body = this.$.tbody;\n    let x = Array.prototype.indexOf.call(row.children, cell);\n    let y = Array.prototype.indexOf.call(body.children, row);\n\n    if (dir === \"down\") {\n      if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[x].children[0].setFocus();\n      } else {\n        this.insertRow(y);\n      }\n    } else if (dir === \"up\") {\n      if (y > 0) {\n        body.children[y - 1].children[x].children[0].setFocus();\n      }\n    } else if (dir === \"right\") {\n      if (x + 1 < row.children.length - 1) {\n        row.children[x + 1].children[0].setFocus();\n      } else if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[1].children[0].setFocus();\n      }\n    } else if (dir === \"left\") {\n      if (x > 1) {\n        row.children[x - 1].children[0].setFocus();\n      } else if (y > 0) {\n        body.children[y - 2].children[\n          body.children[y - 2].children.length - 2\n        ].children[0].setFocus();\n      }\n    }\n  }\n\n  /**\n   * Updates data when cell value changes\n   * @param {event} e the event\n   */\n  _onCellValueChange(e) {\n    let temp = this.data.slice();\n    temp[e.detail.row][e.detail.column] = e.detail.value;\n    this.set(\"data\", []);\n    this.set(\"data\", temp);\n  }\n\n  /**\n   * Updates table properties when setting changes\n   * @param {event} e the event\n   */\n  _onTableSettingChange(e) {\n    this[e.detail.id] = e.detail.toggled;\n  }\n\n  /**\n   * Makes sure there is always on cell to work from\n   */\n  _setMinimumData(data) {\n    if (data.length < 1 || data[0].length < 1) {\n      this.set(\"data\", [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n    }\n  }\n\n  /**\n   * Determines if all of the table style choices hidden?\n   * @param {boolean} hideBordered is the border toggle hidden\n   * @param {boolean} hideCondensed is the condensed toggle hidden\n   * @param {boolean} hideStriped is the striped toggle hidden\n   * @param {boolean} hideResponsive is the responsive toggle hidden\n   * @returns {boolean} whether all of the  display options are hidden\n   */\n  _tableDisplayHidden(\n    hideBordered,\n    hideCondensed,\n    hideStriped,\n    hideResponsive\n  ) {\n    return hideBordered && hideCondensed && hideStriped && hideResponsive;\n  }\n\n  /**\n   * Determines if all of the sorting and filtering choices hidden?\n   * @param {boolean} hideSort is the sort toggle hidden\n   * @param {boolean} hideFilter is the filter toggle hidden\n   * @returns {boolean} whether all of the sorting & filtering options are hidden\n   */\n  _tableSortHidden(hideSort, hideFilter) {\n    return hideSort && hideFilter;\n  }\n}\nwindow.customElements.define(EditableTable.tag, EditableTable);\nexport { EditableTable };\n"],"names":["displayBehaviors","SuperClass","props","bordered","type","Boolean","value","reflectToAttribute","notify","caption","String","columnHeader","csvData","condensed","data","Array","observer","dataCsv","filter","footer","rowHeader","responsive","sort","striped","thead","computed","tbody","tfoot","Object","assign","this","length","querySelector","importHTML","text","l","p","row","ret","i","r","s","slice","map","cell","_this2","_replaceBlankCell","_isNumeric","replace","join","getTR","tr","open","close","th","_this3","td","headers","body","hideBordered","hideCondensed","hideFilter","hideResponsive","hideSort","hideStriped","summary","table","call","querySelectorAll","innerHTML","trim","set","e","CSVtoArray","ch","ft","isNaN","cellBehaviors","index","numerals","split","results","_getLetter","reverse","label","place","Math","floor","letters","EditableTableEditorRowcol","PolymerElement","insert","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","rowColAction","html","Number","window","customElements","define","tag","template","document","head","appendChild","content","EditableTableEditorToggle","toggled","disabled","controls","readOnly","id","icon","EditableTableEditorCell","$","textarea","focus","column","_getLabel","caret","selection","sel","createRange","moveStart","shadowRoot","selectionStart","start","end","createTextRange","range","collapse","moveEnd","select","setSelectionRange","selectionEnd","undefined","setCaretPosition","parentNode","direction","styleElement","createElement","css","register","EditableTableStyleManager","instance","requestAvailability","setAttribute","append","EditableTableSort","mode","sortMode","__checked","columnIndex","sortColumn","sorting","EditableTableFilter","filtered","EditableTableDisplay","ResponsiveUtilityBehaviors","temp","push","alt","selected","parseInt","filterColumn","indexOf","numeric","_updateCols","setSortMode","sortData","cols","col","_isColHidden","cellIndex","removeAttribute","filterText","toLowerCase","unshift","afterNextRender","addEventListener","_changeSortMode","bind","toggleFilter","removeEventListener","EditableTable","confirm","splice","temp2","edit","editMode","insertRow","insertColumn","deleteRow","deleteColumn","model","root","nodeList","dir","x","prototype","children","y","setFocus","hideDisplay","hideSortFilter"],"mappings":"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"}
